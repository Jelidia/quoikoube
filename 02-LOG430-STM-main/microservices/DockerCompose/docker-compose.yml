version: "3.8"

services:
  database:
    image: postgres:latest
    container_name: PostgresDB
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"

  nodecontroller:
    image: log430/nodecontroller:latest
    container_name: NodeController
    restart: always
    ports:
      - '${NODE_CONTROLLER_PORT}:8080'
      - '4300-4310:4300-4310'
    environment:
      TEAM_NAME: '${TEAM_NAME}'
      STUDENT_NAME: '${STUDENT_NAME}'
      GROUP: '${GROUP}'
      SECRET: '${SECRET}'
      INGRESS_ADDRESS: '${INGRESS_ADDRESS}'
      INGRESS_PORT: '${INGRESS_PORT}'
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      MQ_SERVICE_NAME: EventStream
      CUSTOM_CONTAINER_PORTS_DISCOVERY: 5672,5432,80,9091,9092,9093
      BRIDGE_PORT: 32674
      # Trace > Information > Error
      Logging__LogLevel__Default: Information
      CONNECT_TO_INGRESS: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  event-store:
    container_name: EventStream
    image: cluster_mq
    restart: always
    hostname: EventStream
    build:
      context: ../ClusterRabbitMq/
      dockerfile: Dockerfile
    ports:
      - '32771:5672'
      - '30001:15672'
      - '25673:25672'
    environment:
      ID: EventStream
      RABBITMQ_ERLANG_COOKIE_FILE: /var/lib/rabbitmq/.erlang.cookie
    labels:
      Artifact_Category: Connector
      Replicas: EventStream



  ### POD 1 : STM + Sidecar ###
  stm:
    container_name: STM
    image: stm
    restart: always
    build:
      context: ../STM
      dockerfile: /Configuration/Dockerfile
    environment:
      DB_SERVER_ADDRESS: ${DB_SERVER_ADDRESS}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      ID: STM
      API_KEY: '${STM}'
      # HIGH (3gb) > MEDIUM (1.5gb) > LOW (300mb)
      MEMORY_CONSUMPTION: LOW
    ports:
      - '32774:8080'
    labels:
      Pod_Links: STM_Sidecar
      ARTIFACT_CATEGORY: Computation
      Replicas: STM, STM1, STM2

  stm-sidecar:
    environment:
      ID: STM_Sidecar
    container_name: STM_Sidecar
    build:
      context: ../Sidecar
    restart: always
    ports:
      - '${SIDECAR_STM_PORT}:80'
    labels:
      ARTIFACT_CATEGORY: Computation



  ### POD 2 : RouteTimeProvider + Sidecar ###
  routetimeprovider:
    container_name: RouteTimeProvider
    image: routetimeprovider
    restart: always
    build:
      context: ../RouteTimeProvider
      dockerfile: /RouteTimeProvider/Dockerfile
    environment:
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      ID: RouteTimeProvider
      API_KEY: '${TOMTOM}'
    ports:
      - '32772:8080'
    labels:
      Pod_Links: RTP_Sidecar
      ARTIFACT_CATEGORY: Computation
      Replicas: RouteTimeProvider, RouteTimeProvider1, RouteTimeProvider2

  routetimeprovider-sidecar:
    environment:
      ID: RTP_Sidecar
    container_name: RTP_Sidecar
    build:
      context: ../Sidecar
    restart: always
    ports:
      - '${SIDECAR_ROUTETIME_PORT}:80'
    labels:
      ARTIFACT_CATEGORY: Computation



  ### POD 3 : TripComparator + Sidecar ###
  tripcomparator:
    container_name: TripComparator
    image: tripcomparator
    restart: always
    build:
      context: ../TripComparator
      dockerfile: /Configuration/Dockerfile
    environment:
      SERVICES_ADDRESS: '${SERVICES_ADDRESS}'
      NODE_CONTROLLER_PORT: '${NODE_CONTROLLER_PORT}'
      ID: TripComparator
      MQ_SERVICE_NAME: EventStream
    ports:
      - '32773:8080'
    labels:
      Pod_Links: TC_Sidecar
      ARTIFACT_CATEGORY: Computation
      Replicas: TripComparator, TripComparator1, TripComparator2

  tripcomparator-sidecar:
    environment:
      ID: TC_Sidecar
    container_name: TC_Sidecar
    build:
      context: ../Sidecar
    restart: always
    ports:
      - '${SIDECAR_TRIPCOMPARATOR_PORT}:80'
    labels:
      ARTIFACT_CATEGORY: Computation

volumes:
  postgres_data: {}